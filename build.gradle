plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.25.0' // 빌드 시 코드 컨벤션 적용
    id 'jacoco'
}

group = 'com.codeit'
version = '0.0.1-SNAPSHOT'

//스프링 부트에서 bootJar가 jar파일 생성
tasks.named('bootJar'){
    archiveBaseName.set("duckhu")
    archiveVersion.set("1.2-M8")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //lombok - test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // postgreSQL, H2 Database
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    //mapstruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //S3
    implementation 'software.amazon.awssdk:s3:2.31.7'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.581'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // OCR 기능을 위한 Tesseract 라이브러리, Google vision 라이브러리
    implementation 'net.sourceforge.tess4j:tess4j:5.4.0'
    implementation 'com.google.cloud:google-cloud-vision:3.30.0'

    //spring actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

spotless {
    java {
        googleJavaFormat()
        target 'src/**/*.java'
    }
}

tasks.named('build') {
    dependsOn 'spotlessApply'  // ✅ build 전에 코드 포맷 자동 적용
}

jacoco {
    toolVersion = "0.8.10" // ➡️ 최신 버전 사용
}

tasks.named('test') {
    useJUnitPlatform()
//    ignoreFailures = true 테스트 실패 넘기는 코드
    finalizedBy 'jacocoTestReport'
}
clean {
    delete file('src/main/generated')
}

tasks.named('jacocoTestReport', JacocoReport).configure { report ->
    dependsOn test

    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    // classDirectories 재설정: controller, service, repository 패키지만 포함
    classDirectories.setFrom(
            classDirectories.files.collect { File f ->
                fileTree(dir: f, include: [
                        'com/codeit/duckhu/domain/**/controller/**',
                        'com/codeit/duckhu/domain/**/service/**',
                        'com/codeit/duckhu/domain/**/repository/**'
                ])
            }
    )
}
